function [] = tsk2_2_a()
    %nl - noisy labels
    %kk - ww + epsilon
    function [Lp, dLp_dk] = nl_loglike(kk, xx, yy)
        %kk - ww + epsilon - (D+1)x1 
        %xx - NxD
        %yy - Nx1
        % Ensure labels are in {+1,-1}:
        yy  = (yy==1)*2 - 1;
        ww  = kk(1:end-1);
        eps = kk(end);
        
        exps = exp(-yy.*(xx*ww)); % Nx1
        sigmas = 1./(1 + exps); % Nx1
        %probabilities
        pbs = (1-eps)*sigmas + 0.5*eps; % Nx1
        Lp = sum(log(pbs));

        if nargout > 1
            %inverse probabilities
            inv_pbs = 1./pbs; % Nx1
            dLp_dw   = (inv_pbs.*(1-eps).*sigmas.^2.*exps.*yy)' * xx; % 1xD
            dLp_deps = sum(inv_pbs.*(-sigmas + 0.5)); % 1x1
            dLp_dk   = [dLp_dw, dLp_deps]'; % (D+1)x1
        end
    end

    %default conf
    weights = [1; 1; 1]; % x1, x2, bias % Dx1 = 3x1
    epsilon = 0.3;
    h = 0.01; % so the error should be within 0.0001
    k = [weights; epsilon]; % (D+1)x1 = 4x1
    x = [0, 0, 1; 2, 3, 1]; % x1, x2, bias % NxD = 2x3 
    y = [-1; 1]; % Nx1 = 2x1
    %show not perturbed value
    Lp = nl_loglike(k, x, y)
    fprintf('checkgrad'
    accuracy = checkgrad(@nl_loglike, k, h, x, y)
end