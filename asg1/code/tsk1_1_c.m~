%load imgregdata.mat % I do it via terminal

function [] = tsk1_1_c(xtr)
    xx = xtr ./ 63;
    xx_std = std(xx,0,2);

    %get indixes for flat and non-flat patches respectively
    %the threshold 4/63 is taken from the task 
    threshold = ones(size(xx_std)) .* 4/63;
    
    xx_f_ids  = bsxfun(@le, xx_std, threshold);
    xx_nf_ids = bsxfun(@gt, xx_std, threshold);

    %slicing
    xx_f  = xx(xx_f_ids, :);
    xx_nf = xx(xx_nf_ids,:); 

    %pick one random example of flat patch and non-flat patch
    function [rnd_image, image_index] = get_rnd_image(patches)
        image_index = randi(size(patches, 1), 1);
        patch = patches(image_index, :);
        %expanding patches to the full size
        patch(1050) = 0;
        %reshaping to image
        rnd_image = reshape(patch, [35, 30]);
        %transposing them to ensure right position on the plot
        rnd_image = rnd_image';
    end

    flat_image = reshape(flat_patch, [35, 30]);
    non_flat_image = reshape(non_flat_patch, [35, 30]);

    %show images
    %transposing them to ensure right position 
    %last index of the patch vector patch_vector(1050) == patch_image(30, 35)

    %flat
    figure;
    imagesc(flat_image', [0, 1]);
    title(strcat('flat image, id ', num2str(rnd_flat_id)));
    colormap gray;

    %non-flat
    figure;
    imagesc(non_flat_image', [0, 1]);
    title(strcat('non-flat image, id ', num2str(rnd_non_flat_id)));
    colormap gray;
end